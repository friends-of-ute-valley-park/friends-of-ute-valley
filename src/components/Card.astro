---
export interface Props {
  title: string;
  image: string;
  previewText: string;
  href: string | undefined;
  publishedOn: string;
  canBeWide: boolean | undefined;
  minutesRead: string;
}

const { title, previewText, image, publishedOn, href, canBeWide, minutesRead } = Astro.props as Props;

export function getStaticPaths() {
  return [{ params: { news: title } }];
}
---

<div class:list={['flex flex-col rounded-lg shadow-lg overflow-hidden', { 'sm:flex-row': canBeWide }]}>
  <div class="flex-shrink-0">
    <img class:list={['h-48 object-cover', { 'w-full sm:w-48': canBeWide, 'w-full': !canBeWide }]} src={image} alt="" loading="lazy" />
  </div>
  <div class="flex-1 bg-white p-6 flex flex-col justify-between">
    <div class="flex-1">
      <a href={href} class="block">
        <h3 class="mt-2 text-xl leading-7 font-semibold text-gray-900">
          {title} - {canBeWide}
        </h3>
        <p class="mt-3 text-base leading-6 text-gray-500">
          {previewText}
        </p>
      </a>
    </div>
    <div class="mt-6 flex items-center">
      <div>
        <div class="flex text-sm leading-5 text-gray-500">
          <time datetime={publishedOn}>
            {new Intl.DateTimeFormat('en-US').format(new Date(publishedOn))}
          </time>
          <span class="mx-1"> &middot;</span>
          <span>
            {minutesRead}
          </span>
        </div>
      </div>
    </div>
  </div>
</div>

<style>

</style>
